---

- name: set up the authorized key of this machine's user
  authorized_key: 'user={{ lookup("env","USER") }} key="{{ item }}"'
  with_file:
    - "{{ lookup('env','HOME') }}/.ssh/id_rsa.pub"

- name: work around some silly Ubuntu vagrant box perms issue that I am too tired to debug
  sudo: yes
  file: path=/opt mode=0777 recurse=no state=directory

- name: copy the code to the target machine using rsync
  synchronize: 'src={{base_dir}} dest=/opt delete=yes archive=yes recursive=yes mode=push'
  notify:
    - restart supervisor

- name: copy the supervisor configuration to its destination
  sudo: yes
  template: src=../templates/mfl_supervisor_conf.j2 dest=/etc/supervisor/conf.d/mfl_api.conf
  notify:
    - restart supervisor

- name: copy the nginx configuration to its destination
  sudo: yes
  template: src=../templates/mfl_nginx.j2 dest=/etc/nginx/sites-enabled/mfl.conf
  notify:
    - restart nginx

- name: update versions of common dependencies via pip before we make our venv
  pip: 'name={{item}} state=latest'
  with_items:
    - pip
    - distribute
    - virtualenv
    - virtualenvwrapper

- name: now install the dependencies that we need
  pip: chdir=/opt/mfl_api requirements=/opt/mfl_api/requirements.txt virtualenv=/opt/mfl_api_virtualenv

- name: run fab setup_db
  shell: "source /opt/mfl_api_virtualenv/bin/activate && cd /opt/mfl_api && DEBUG=false fab setup_db executable=/bin/bash"
  when: setup_new_db

- name: run fab migrate
  shell: "source /opt/mfl_api_virtualenv/bin/activate && cd /opt/mfl_api && DEBUG=false fab migrate executable=/bin/bash"

- name: run the Django migrations and collectstatic
  django_manage: "command={{item}} app_path=/opt/mfl_api virtualenv=/opt/mfl_api_virtualenv/"
  with_items:
    - migrate
    - collectstatic
  notify:
    - restart supervisor

- name: run fab load_demo_data
  shell: "source /opt/mfl_api_virtualenv/bin/activate && cd /opt/mfl_api && fab load_demo_data_from_scratch executable=/bin/bash"
  when: load_demo_data

- name: run fab recreate_search_index
  shell: "source /opt/mfl_api_virtualenv/bin/activate && cd /opt/mfl_api && fab recreate_search_index executable=/bin/bash"
  when: recreate_search_index

- name: clear and warm api cache
  shell: >
    source /opt/mfl_api_virtualenv/bin/activate &&
    cd /opt/mfl_api &&
    fab clear_cache &&
    fab warmup_cache:server_location="{{server_url}}",username="{{username}}",password="{{password}}",client_id="{{client_id}}",client_secret="{{client_secret}}" executable=/bin/bash
  when: warm_cache
  tags: warm_cache
